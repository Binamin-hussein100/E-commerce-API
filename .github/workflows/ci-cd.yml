name: Ecommerce Pipeline

on:
  push:
    paths:
      - 'services/**'
  pull_request:
    paths:
      - 'services/**'

jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - user-service
          - notification-service
          - cart-service
          - payment-service
          - product-service
          
    steps:
      # check out the code
      - name: Notify slack - Pipeline Started 
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H "Content-Type: application/json" --data '{
              "text": "üöÄ Build and deploy started for service: '${{ matrix.service }}'",
              "channel": "#devops",
              "username": "Engineer-Bot",
              "icon_emoji": ":construction:"
          }' $SLACK_WEBHOOK_URL

      - name: checkout code
        uses: actions/checkout@v3

      # Set up node.js
      - name: Set up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      # install dependencies
      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: npm install

      # Run test
      - name: Run tests
        working-directory: services/${{matrix.service}}
        run: npm test

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
     
      # Build and push Docker image
      - name: Build and push Docker image
        working-directory: services/${{ matrix.service }}
        run: |
          TAG=${{ github.sha }}
          docker build -t binamin/${{ matrix.service }}:${{ github.sha }} .
          docker push binamin/${{ matrix.service }}:${{ github.sha }}

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        working-directory: services/${{ matrix.service }}
        run: |

      # Notify on Slack - Success
      - name: Notify Slack - Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "‚úÖ Build and deploy succeeded for service: '${{ matrix.service }}'",
            "channel": "#devops",
            "username": "Engineer-Bot",
            "icon_emoji": ":white_check_mark:"
          }' $SLACK_WEBHOOK_URL

        # Notify on Slack - Failure
      - name: Notify Slack - Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "‚ùå Build and deploy failed for service: '${{ matrix.service }}'. Check the logs for details.",
            "channel": "#devops",
            "username": "Engineer-Bot",
            "icon_emoji": ":x:"
          }' $SLACK_WEBHOOK_URL



